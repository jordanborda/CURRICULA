"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "(pages-dir-browser)/./components/exportPdf.js":
/*!*********************************!*\
  !*** ./components/exportPdf.js ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   exportToPdf: () => (/* binding */ exportToPdf)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/.pnpm/react@19.1.0/node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var jspdf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jspdf */ \"(pages-dir-browser)/./node_modules/.pnpm/jspdf@3.0.1/node_modules/jspdf/dist/jspdf.es.min.js\");\n/* harmony import */ var jspdf_autotable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jspdf-autotable */ \"(pages-dir-browser)/./node_modules/.pnpm/jspdf-autotable@5.0.2_jspdf@3.0.1/node_modules/jspdf-autotable/dist/jspdf.plugin.autotable.mjs\");\n/* harmony import */ var marked__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! marked */ \"(pages-dir-browser)/./node_modules/.pnpm/marked@15.0.12/node_modules/marked/lib/marked.esm.js\");\n/* harmony import */ var _barrel_optimize_names_CloudDownloadOutlined_ant_design_icons__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! __barrel_optimize__?names=CloudDownloadOutlined!=!@ant-design/icons */ \"(pages-dir-browser)/__barrel_optimize__?names=CloudDownloadOutlined!=!./node_modules/.pnpm/@ant-design+icons@5.6.1_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@ant-design/icons/es/index.js\");\n// File: components/exportPdf.js\n\n\n // Extiende jsPDF con el método autoTable\n\n\nconst DEFAULT_FONT_SIZE_PT = 10;\nconst TABLE_FONT_SIZE_PT = 6; // Tamaño de fuente muy pequeño para tablas\nconst HEADER_FONT_SIZE_PT = {\n    H1: 16,\n    H2: 14,\n    H3: 12,\n    H4: 10,\n    H5: 9,\n    H6: 8\n};\nconst LINE_HEIGHT_FACTOR = 1.2;\nconst MARGIN_PT = 30; // Margen uniforme\n// Helper para añadir texto con manejo de saltos de línea y de página\nfunction addText(doc, text, x, y, maxWidth) {\n    let options = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};\n    const { fontSize = DEFAULT_FONT_SIZE_PT, fontStyle = 'normal', isHtml = false // Para manejar <br> como saltos de línea\n     } = options;\n    doc.setFontSize(fontSize);\n    doc.setFont(undefined, fontStyle); // Asume que la fuente por defecto es Helvetica o similar\n    let processedText = text;\n    if (isHtml) {\n        // Convertir <br> y <br /> a \\n\n        processedText = text.replace(/<br\\s*\\/?>/gi, '\\n');\n        // Simple strip de otros tags HTML para este helper, o usar un parser más robusto si se necesita\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = processedText;\n        processedText = tempDiv.textContent || tempDiv.innerText || \"\";\n    }\n    const lines = doc.splitTextToSize(processedText, maxWidth);\n    const textHeight = lines.length * fontSize * LINE_HEIGHT_FACTOR;\n    if (y + textHeight > doc.internal.pageSize.height - MARGIN_PT) {\n        doc.addPage();\n        y = MARGIN_PT;\n    }\n    doc.text(lines, x, y, {\n        lineHeightFactor: LINE_HEIGHT_FACTOR\n    });\n    return y + textHeight;\n}\nconst exportToPdf = async (markdownContent, programData, notification)=>{\n    if (!markdownContent) {\n        notification.warn({\n            message: 'Contenido Vacío',\n            description: 'No hay plan para exportar a PDF.'\n        });\n        return;\n    }\n    try {\n        var _programData_degree;\n        const htmlString = (0,marked__WEBPACK_IMPORTED_MODULE_3__.marked)(markdownContent);\n        const parser = new DOMParser();\n        const htmlDoc = parser.parseFromString(htmlString, 'text/html');\n        const bodyElements = Array.from(htmlDoc.body.children);\n        const doc = new jspdf__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({\n            orientation: 'p',\n            unit: 'pt',\n            format: 'a4'\n        });\n        let currentY = MARGIN_PT;\n        const contentWidth = doc.internal.pageSize.width - 2 * MARGIN_PT;\n        for (const element of bodyElements){\n            if (currentY > doc.internal.pageSize.height - MARGIN_PT - 20) {\n                doc.addPage();\n                currentY = MARGIN_PT;\n            }\n            const tagName = element.tagName.toUpperCase();\n            if (HEADER_FONT_SIZE_PT[tagName]) {\n                currentY = addText(doc, element.textContent, MARGIN_PT, currentY, contentWidth, {\n                    fontSize: HEADER_FONT_SIZE_PT[tagName],\n                    fontStyle: 'bold'\n                });\n                currentY += 5; // Espacio después del encabezado\n            } else if (tagName === 'P') {\n                currentY = addText(doc, element.innerHTML, MARGIN_PT, currentY, contentWidth, {\n                    isHtml: true\n                });\n                currentY += 5;\n            } else if (tagName === 'UL' || tagName === 'OL') {\n                Array.from(element.children).forEach((li, idx)=>{\n                    if (currentY > doc.internal.pageSize.height - MARGIN_PT - 10) {\n                        doc.addPage();\n                        currentY = MARGIN_PT;\n                    }\n                    const prefix = tagName === 'UL' ? '• ' : \"\".concat(idx + 1, \". \");\n                    // Usar innerHTML para que el helper addText lo procese (para <br>)\n                    currentY = addText(doc, prefix + li.innerHTML, MARGIN_PT + 10, currentY, contentWidth - 10, {\n                        isHtml: true\n                    });\n                });\n                currentY += 5;\n            } else if (tagName === 'BLOCKQUOTE') {\n                // Estilo simple para blockquote\n                doc.setFillColor(240, 240, 240);\n                const tempY = currentY;\n                const finalY = addText(doc, element.innerHTML, MARGIN_PT + 5, currentY, contentWidth - 10, {\n                    fontSize: DEFAULT_FONT_SIZE_PT - 1,\n                    fontStyle: 'italic',\n                    isHtml: true\n                });\n                doc.rect(MARGIN_PT, tempY - (DEFAULT_FONT_SIZE_PT - 1) / 2, 3, finalY - tempY + (DEFAULT_FONT_SIZE_PT - 1) / 2, 'F'); // Barra lateral\n                currentY = finalY + 5;\n            } else if (tagName === 'PRE' || tagName === 'CODE' && element.parentElement.tagName !== 'PRE') {\n                doc.setFont('courier', 'normal'); // Opcional: fuente monoespaciada para código\n                currentY = addText(doc, element.textContent, MARGIN_PT, currentY, contentWidth, {\n                    fontSize: DEFAULT_FONT_SIZE_PT - 2\n                });\n                doc.setFont(undefined, 'normal'); // Volver a la fuente por defecto\n                currentY += 5;\n            } else if (tagName === 'TABLE') {\n                const headRows = [];\n                element.querySelectorAll('thead tr').forEach((trNode)=>{\n                    const row = [];\n                    trNode.querySelectorAll('th').forEach((thNode)=>row.push(thNode.textContent.trim()));\n                    headRows.push(row);\n                });\n                const bodyRows = [];\n                element.querySelectorAll('tbody tr').forEach((trNode)=>{\n                    const row = [];\n                    trNode.querySelectorAll('td').forEach((tdNode)=>{\n                        // Para que autoTable interprete <br> como saltos de línea en celda\n                        const cellHTML = tdNode.innerHTML.replace(/<br\\s*\\/?>/gi, '\\n');\n                        const tempDiv = document.createElement('div');\n                        tempDiv.innerHTML = cellHTML; // Para decodificar entidades HTML si las hubiera\n                        row.push(tempDiv.textContent || tempDiv.innerText || \"\");\n                    });\n                    bodyRows.push(row);\n                });\n                if (currentY + 20 > doc.internal.pageSize.height - MARGIN_PT) {\n                    doc.addPage();\n                    currentY = MARGIN_PT;\n                }\n                doc.autoTable({\n                    head: headRows,\n                    body: bodyRows,\n                    startY: currentY,\n                    theme: 'grid',\n                    styles: {\n                        fontSize: TABLE_FONT_SIZE_PT,\n                        cellPadding: 1.5,\n                        overflow: 'linebreak'\n                    },\n                    headStyles: {\n                        fillColor: [\n                            41,\n                            128,\n                            185\n                        ],\n                        textColor: [\n                            255,\n                            255,\n                            255\n                        ],\n                        fontStyle: 'bold',\n                        fontSize: TABLE_FONT_SIZE_PT + 1\n                    },\n                    margin: {\n                        left: MARGIN_PT,\n                        right: MARGIN_PT\n                    },\n                    tableWidth: 'auto',\n                    // pageBreak: 'auto', // Ya es por defecto\n                    didDrawPage: (data)=>{\n                    // Puedes añadir encabezados/pies de página aquí si es necesario\n                    // currentY = MARGIN_PT; // No resetear aquí, autoTable lo maneja\n                    }\n                });\n                currentY = doc.lastAutoTable.finalY + 10; // Obtener la posición Y después de la tabla\n            } else if (tagName === 'HR') {\n                if (currentY + 10 > doc.internal.pageSize.height - MARGIN_PT) {\n                    doc.addPage();\n                    currentY = MARGIN_PT;\n                }\n                doc.setDrawColor(180, 180, 180);\n                doc.line(MARGIN_PT, currentY, doc.internal.pageSize.width - MARGIN_PT, currentY);\n                currentY += 10;\n            } else if (element.textContent.trim()) {\n                console.warn(\"Elemento PDF no manejado explícitamente:\", tagName, element.textContent.substring(0, 30));\n                currentY = addText(doc, element.innerHTML, MARGIN_PT, currentY, contentWidth, {\n                    isHtml: true\n                });\n                currentY += 5;\n            }\n        }\n        const fileName = \"\".concat((programData === null || programData === void 0 ? void 0 : (_programData_degree = programData.degree) === null || _programData_degree === void 0 ? void 0 : _programData_degree.replace(/\\s+/g, '_')) || 'plan_curricular', \"_\").concat(new Date().toISOString().slice(0, 10), \".pdf\");\n        doc.save(fileName);\n        notification.success({\n            message: 'PDF Exportado',\n            description: \"El plan de estudios se ha guardado como \".concat(fileName, \".\"),\n            placement: 'bottomRight',\n            icon: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_CloudDownloadOutlined_ant_design_icons__WEBPACK_IMPORTED_MODULE_4__.CloudDownloadOutlined, {\n                style: {\n                    color: '#52c41a'\n                }\n            }, void 0, false, {\n                fileName: \"/home/jordan/Documents/Software Directrices/CURRICULAFORGE/components/exportPdf.js\",\n                lineNumber: 183,\n                columnNumber: 13\n            }, undefined)\n        });\n    } catch (error) {\n        console.error('Error al generar PDF:', error);\n        notification.error({\n            message: 'Error al Exportar PDF',\n            description: error.message || 'Ocurrió un problema al generar el archivo PDF.',\n            placement: 'bottomRight'\n        });\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./components/exportPdf.js\n"));

/***/ })

});